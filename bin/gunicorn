#! /usr/bin/env python
# -*- coding: utf-8 -
#
# 2009 (c) Benoit Chesneau <benoitc@e-engura.com> 
# 2009 (c) Paul J. Davis <paul.joseph.davis@gmail.com>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

import optparse as op
import os
import sys

sys.path.insert(0, os.getcwd())

import gunicorn

__usage__ = "%prog [OPTIONS] APP_MODULE"

def options():
    return [
        op.make_option('--host', dest='host', default='127.0.0.1',
            help='Host to listen on. [%default]'),
        op.make_option('--port', dest='port', default=8000, type='int',
            help='Port to listen on. [%default]'),
        op.make_option('--workers', dest='workers', default=1, type='int',
            help='Number of workers to spawn. [%default]')
    ]

def main():
    parser = op.OptionParser(usage=__usage__, option_list=options())
    opts, args = parser.parse_args()
    
    if len(args) != 1:
        parser.error("No application module specified.")
    
    arbiter = gunicorn.Arbiter((opts.host, opts.port), opts.workers, args[0])
    arbiter.run()
    
if __name__ == '__main__':
    main()
