# This file is read by config.py to set up the default
# information for all server settings. It is here so
# that we can use the data to generate all the various
# docs related to configuration information.

#
# Config file
#

[config]
section = Config
cli = -c --config
meta = FILE
type = string
default = gunicorn.conf.py
desc = The path to a Gunicorn config file.
    
    By default Gunicorn will try to read a file named 'gunicorn.conf.py' in the
    current directory.
    
    Only has an effect when specified on the command line or as part of an
    application specific configuration.

#
# Server Socket
#

[bind]
section = Server Socket
order = 0
cli = -b --bind
meta = ADDRESS
type = string
default = 127.0.0.1:8000
desc = The socket to bind.

[backlog]
section = Server Socket
order = 1
cli = --backlog
meta = INT
type = pos_int
default = 2048
desc = The maximum number of pending connections.    
    
    This refers to the number of clients that can be waiting to be served.
    Exceeding this number results in the client getting an error when attempting
    to connect. It should only affect servers under significant load.

    Must be a positive integer. Generally set in the 64-2048 range.

#
# Worker processes
#

[workers]
section = Worker Processes
order = 1
cli = -w --workers
meta = INT
type = pos_int
default = 1
desc = The number of worker process for handling requests.
    
    A positive integer generally in the 2-4 x $(NUM_CORES) range. You'll want to
    vary this a bit to find the best for your particular application's work
    load.

[worker_class]
section = Worker Processes
order = 2
cli = -k --worker-class
meta = STRING
type = string
default = egg:gunicorn#sync
desc = The type of workers to use.
    
    The default async class should handle most 'normal' types of work loads.
    You'll want to read http://gunicorn/deployment.hml for information on when
    you might want to choose one of the other worker classes.
    
    An string referring to a 'gunicorn.workers' entry point or a MODULE:CLASS
    pair where CLASS is a subclass of gunicorn.workers.base.Worker. The default
    provided values are:
    
        egg:gunicorn#sync
        egg:gunicorn#eventlet   - Requires eventlet >= 0.9.7
        egg:gunicorn#gevent     - Requires gevent >= 0.12.2 (?)
        egg:gunicorn#tornado    - Requires tornado >= 0.2

[worker_connections]
section = Worker Processes
order = 3
cli = --worker-connections
meta = INT
type = pos_int
default = 1000
desc = The maximum number of simultaneous clients.
    
    This setting only affects the Eventlet and Gevent worker types.
    
    A positive integer generally set to around 1000.

[timeout]
section = Worker Processes
order = 4
cli = -t --timeout
meta = INT
type = pos_int
default = 30
desc = Workers silent for more than this many seconds are killed and restarted.
    
    Generally set to thirty seconds. Only set this noticeably higher if you're
    sure of the repercussions for sync workers. For the non sync workers it just
    means that the worker process is still communicating and is not tied to the
    length of time required to handle a single request.

[keepalive]
section = Worker Processes
order = 5
cli = --keep-alive
meta = INT
type = pos_int
default = 2
desc = The number of seconds to wait for requests on a Keep-Alive connection.
    
    A positive integer. Generally set in the 1-5 seconds range.

#
# Debugging
#

[debug]
section = Debugging
order = 1
cli = -d --debug
type = bool
action = store_true
default = False
desc = Turn on debugging in the server.
    
    This limits the number of worker processes to 1 and changes some error
    handling that's sent to clients.

[spew]
section = Debugging
order = 2
cli = --spew
type = bool
action = store_true
default = False
desc = Install a trace function that spews every line executed by the server.
    
    This is the nuclear option.

#
# Server mechanics
#

[daemon]
section = Server Mechanics
order = 1
cli = -D --daemon
action = store_true
type = bool
default = False
desc = Daemonize the Gunicorn process.
    
    Detaches the server from the controlling terminal and enters the background.

[pidfile]
section = Server Mechanics
order = 2
cli = -p --pid
meta = FILE
type = string
default =
desc = A filename to use for the PID file.
    
    If not set, no PID file will be written.

[user]
section = Server Mechanics
order = 3
cli = -u --user
type = string
default =
desc = Switch worker processes to run as this user.
    
    A valid user id (as an integer) or the name of a user that can be retrieved
    with a call to pwd.getpwnam(value) or None to not change the worker process
    user.

[group]
section = Server Mechanics
order = 4
cli = -g --group
type = string
default =
desc = Switch worker process to run as this group.

    A valid group id (as an integer) or the name of a user that can be retrieved
    with a call to pwd.getgrnam(value) or None to change the worker processes
    group.

[umask]
section = Server Mechanics
order = 5
cli = -m --umask
meta = INT
type = pos_int
default = 0
desc = A bit mask for the file mode on files written by Gunicorn.
    
    Note that this affects unix socket permissions.
    
    A valid value for the os.umask(mode) call or a string compatible with
    int(value, 0) (0 means Python guesses the base, so values like "0", "0xFF",
    "0022" are valid for decimal, hex, and octal representations)

[tmp_upload_dir]
section = Server Mechanics
order = 6
cli =
meta = DIR
type = string
default =
desc = Directory to store temporary request data as they are read.
    
    This may disappear in the near future.
    
    This path should be writable by the process permissions set for Gunicorn
    workers. If not specified, Gunicorn will choose a system generated temporary
    directory.

#
# Logging
#

[logfile]
section = Logging
order = 1
cli = --log-file
meta = FILE
type = string
default = -
desc = The log file to write to.
    
    "-" means log to stdout.

[loglevel]
section = Logging
order = 2
cli = --log-level
meta = LEVEL
type = string
default = info
desc = The granularity of log output
    
    Valid level names are:
    
        debug
        info
        warning
        error
        critical

#
# Process naming
#

[proc_name]
section = Process Naming
order = 1
cli = -n --name
meta = STRING
type = string
default = gunicorn
desc = A base to use with setproctitle for process naming.

    This affects things like 'ps' and 'top'. If you're going to be running more
    than one instance of Gunicorn you'll probably want to set a name to tell
    them apart. This requires that you install the setproctitle module.

    It defaults to 'gunicorn'.

[default_proc_name]
section = Process Naming
order = 2
cli =
type = string
default = gunicorn
desc = Internal setting that is adjusted for each type of application.

#
# Server hooks
#

[pre_fork]
section = Server Hooks
order = 1
cli =
type = callable
arity = 2
default =
desc = Called just before a worker is forked.

    The callable needs to accept two instance variables for the Arbiter and new
    Worker.

[post_fork]
section = Server Hooks
order = 2
cli =
type = callable
arity = 2
default =
desc = Called just after a worker has been forked.
    
    The callable needs to accept two instance variables for the Arbiter and new
    Worker.

[pre_exec]
section = Server Hooks
order = 3
cli =
type = callable
arity = 1
default =
desc = Called just before a new master process is forked.
    
    The callable needs to accept a single instance variable for the Arbiter.

    Cannot be specified from the command line.
